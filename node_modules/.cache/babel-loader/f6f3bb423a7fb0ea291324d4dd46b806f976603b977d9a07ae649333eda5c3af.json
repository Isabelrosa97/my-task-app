{"ast":null,"code":"var _jsxFileName = \"/Users/larosa/project03/my-task-app/src/pages/Todos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TaskForm from \"..\";\nimport TaskList from \"../components/TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n\n  // Load from localStorage\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    setTasks(saved);\n  }, []);\n\n  // Save to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = task => {\n    setTasks([...tasks, {\n      ...task,\n      id: Date.now()\n    }]);\n  };\n  const toggleTask = id => {\n    setTasks(tasks.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t));\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(t => t.id !== id));\n  };\n  // Filter tasks\n  const filteredTasks = tasks.filter(task => {\n    if (filter === \"completed\") return task.completed;\n    if (filter === \"incomplete\") return !task.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"luckiest-guy-regular\",\n      children: \" My To-dos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary me-2\",\n        onClick: () => setFilter(\"all\"),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary me-2\",\n        onClick: () => setFilter(\"completed\"),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary \",\n        onClick: () => setFilter(\"incomplete\"),\n        children: \"Incomplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Todos, \"B2DLP1twtQKticyh21DjDbtXEYo=\");\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","jsxDEV","_jsxDEV","Todos","_s","tasks","setTasks","filter","setFilter","saved","JSON","parse","localStorage","getItem","setItem","stringify","addTask","task","id","Date","now","toggleTask","map","t","completed","deleteTask","filteredTasks","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/larosa/project03/my-task-app/src/pages/Todos.js"],"sourcesContent":["import React, { useState, useEffect }from \"react\";\nimport TaskForm from \"..\";\nimport TaskList from \"../components/TaskList\";\n\nfunction Todos() {\n    const [tasks, setTasks] = useState([]);\n    const [filter, setFilter] = useState(\"all\");\n\n    // Load from localStorage\n    useEffect(() => {\n        const saved = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n        setTasks(saved);\n    }, []);\n\n    // Save to localStorage\n    useEffect(() => {\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }, [tasks]);\n\n    const addTask = (task) => {\n        setTasks([...tasks, {...task, id: Date.now() }]);\n    };\n    const toggleTask = (id) => {\n        setTasks(tasks.map((t) => (t.id === id ? { ...t, completed: !t.completed} : t)));\n    };\n    const deleteTask = (id) => {\n        setTasks(tasks.filter((t) => t.id !== id));\n    };\n    // Filter tasks\n    const filteredTasks = tasks.filter((task) => {\n        if (filter === \"completed\") return task.completed;\n        if (filter === \"incomplete\") return !task.completed;\n        return true;\n    });\n\n    return (\n        <div>\n            <h1 className=\"luckiest-guy-regular\"> My To-dos</h1>\n            <TaskForm addTask={addTask}/>\n            <div className=\"mb-3\">\n                <button className=\"btn btn-secondary me-2\" onClick={() => setFilter(\"all\")}>All</button>\n                <button className=\"btn btn-secondary me-2\" onClick={() => setFilter(\"completed\")}>Completed</button>\n                <button className=\"btn btn-secondary \" onClick={() => setFilter(\"incomplete\")}>Incomplete</button>\n            </div>\n            <TaskList tasks={filteredTasks} toggleTask={toggleTask} deleteTask={deleteTask}/>\n        </div>\n    );\n}\n\nexport default Todos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}